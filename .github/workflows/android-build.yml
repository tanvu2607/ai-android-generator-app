name: Android Build

on:
  push:
    branches: [ main, '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App name (project name)'
        required: true
        default: 'GeneratedApp'
      package_name:
        description: 'Android package name'
        required: true
        default: 'com.example.generatedapp'
      prompt:
        description: 'UI/feature prompt (vi/en)'
        required: true
        default: 'Màn hình danh sách đơn giản với Material3'

permissions:
  contents: read

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install generator deps (minimal)
        run: |
          python -m pip install -U pip
          pip install -r backend/requirements-min.txt

      - name: Generate Android project zip
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          if [ -n "${GEMINI_API_KEY:-}" ]; then
            export LLM_PROVIDER=gemini
          fi
          python -m backend.cli \
            -n "${{ github.event.inputs.app_name }}" \
            -p "${{ github.event.inputs.package_name }}" \
            -r "${{ github.event.inputs.prompt }}" \
            -o android-project.zip

      - name: Unzip generated project
        run: |
          rm -rf generated && mkdir -p generated
          unzip -q android-project.zip -d generated

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android packages
        run: |
          sdkmanager --install "platforms;android-34" "build-tools;34.0.0" "platform-tools" --sdk_root="$ANDROID_SDK_ROOT"
          yes | sdkmanager --licenses --sdk_root="$ANDROID_SDK_ROOT"

      - name: Initialize Gradle wrapper (8.7)
        run: |
          cd generated
          gradle -v
          gradle wrapper --gradle-version 8.7
          chmod +x gradlew

      - name: Build with retry/fix loop
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}
        run: |
          bash .github/scripts/build_android.sh generated

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build-logs/